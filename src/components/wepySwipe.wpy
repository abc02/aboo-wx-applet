<style lang="less">
.swipe-item-wrapper{
  height: 120rpx;
  position: relative;
  overflow: hidden;
  padding: 0 10px;
  margin-top: 10rpx;
  border-top: 1px solid #e5e5e5;
  border-bottom: 1px solid #e5e5e5;
  .swipe-actions{
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 195rpx;
    position: absolute;
    top: 0;
    z-index: 1;
    &.actions-left{
      left: 0;
    }
    &.actions-right{
      right: 0;
    }
  }
  .swipe-content{
    width: 100%;
    height: 100%;
    line-height: 120rpx;
    box-sizing: border-box;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 5;
    padding:0 18rpx;
    // border-top: 1px solid #e5e5e5;
    // border-bottom: 1px solid #e5e5e5;
    background-color: white;
    .swipe-title {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }
  .swipe-btn{
    flex: 1;
    height: 120rpx;
    line-height: 120rpx;
    text-align: center;
    color: white;
    &.unbind{
      background-color: rgb(244, 51, 60);
    }
    &.default{
      background-color: rgb(16, 142, 233);
    }
  }
}
</style>
<template>
  <view class="swipe-item-wrapper">
    <view
      id="{{swipeData.fixingId}}"
      class="swipe-content"
      style="left:{{swipeData.style === 0 ? '0' : swipeData.style + 'rpx'}}"
      @touchstart="ts"
      @touchmove="tm"
      @touchend="te">
      <slot></slot>
    </view>
    <view class="swipe-actions actions-right">
      <view wx:if="{{swipeData.isDefault !== '1'}}" class="swipe-btn default" @tap.stop="updateFixingIsDefault({{swipeData}})">默认</view>
      <view class="swipe-btn unbind" @tap.stop="unbind({{swipeData}})">解绑</view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'

  export default class Counter extends wepy.component {
    props = {
      swipeData: {
        type: Object,
        default: {}
      }
    }

    data = {
      startX: null,
      moveX: null
    }

    onLoad () {
      // console.log(this.swipeData)
      // this.swipeData.style = 0
    }
    methods = {
      ts (e) {
        if (e.touches.length === 1) {
          this.startX = e.touches[0].clientX
          this.moveX = e.touches[0].clientX
          this.$emit('currentTs', e.currentTarget.id)
        }
      },
      tm (e) {
        if (e.touches.length === 1) {
          // 手指起始点位置与移动期间的差值
          var distenceX = this.moveX - e.touches[0].clientX
          this.moveX = e.touches[0].clientX

          if ((this.swipeData.style - distenceX) < -195) {
            this.swipeData.style = -195
          } else if ((this.swipeData.style - distenceX) > 0) {
            this.swipeData.style = 0
          } else {
            this.swipeData.style = this.swipeData.style - distenceX
          }
          this.setData({
            swipeData: this.props.swipeData
          })
        }
      },

      te (e) {
        if (e.changedTouches.length === 1) {
          if (this.swipeData.style <= -70) {
            this.swipeData.style = -195
          } else {
            this.swipeData.style = 0
          }
          this.setData({
            swipeData: this.props.swipeData
          })
        }
      },
      unbind(fixing) {
        delete fixing.style
        this.$emit('unbind', fixing)
      },
      updateFixingIsDefault (fixing) {
        delete fixing.style
        this.$emit('updateFixingIsDefault', fixing)
      }
    }
  }
</script>
