<style lang="scss">
page{
  height: auto;
}
.weui-cells {
  @extend .weui-cells;
  &:before {
    border-top: none;
  }
}
</style>

<template>
  <view wx:if="{{fixingsInfo}}" >
    <view wx:if="{{fixingsInfo.length > 0}}" class="mt10 mb10 ml10 mr10">
      <text class="muted sm">已绑定的设备:</text>
    </view>
    <repeat 
      for="{{fixingsInfo}}"
      key="index" 
      index="index" 
      item="item"
      >
      <WepySwipe 
        :swipeData="item" 
        @currentTs.user="currentTs"
        @updateFixingIsDefault.user="updateFixingIsDefault"
        @unbind.user="unbind">
        <view class="swipe-title">
          <view class="weui-cells weui-cells_after-title">
            <view class="weui-cell weui-cell_access ">
              <view class="weui-cell__hd mr20">
                <image class="icon-lg" src="{{item.fixingIcon}}" />
              </view>
            <view class="weui-cell__bd column-around">
                <text class="lg mb20">设备昵称:{{item.fixingName}}</text>
                <text class="sm muted">设备ID:{{item.fixingId}}</text>
            </view>
            <view class="weui-cell__ft">
              <text>{{item.isDefault}}</text>
            </view>
          </view>
        </view>
        </view>
      </WepySwipe>
    </repeat>
  </view>  
</template>

<script>
  import Wepy from 'wepy'
  import Base from 'mixins/base'
  import Fixing from 'mixins/fixing'
  import WepySwipe from 'components/wepySwipe'
  import Tips from 'utils/tips'
  export default class GetBindinginfo extends Wepy.page {
    mixins = [Base, Fixing]
    config = {
      navigationBarTitleText: '我的设备'
    }
    components = {
      WepySwipe
    }
    methods = {
      currentTs(id) {
        this.fixingsInfo.forEach(item => {
          if (id !== item.id) {
            item.style = 0
          }
        })
      },
      async unbind(fixing) {
        Tips.loading()
        let res = await this.Unbind(fixing)
        Tips.loaded()
        if (res.ret !== 1001) return Tips.toast(res.code)
        Tips.toast(res.code)
        this.GetBindinginfoToWepySwipe()
      },
      async updateFixingIsDefault (fixing) {
        Tips.loading()
        let res = await this.UpdateFixingIsDefault(fixing)
        Tips.loaded()
        if (res.ret !== 1001) return Tips.toast(res.code)
        Tips.toast(res.code)
        // 重新获取用户绑定的设备数据
        this.GetBindinginfoToWepySwipe()
      }
    }
    async GetBindinginfoToWepySwipe() {
       // loading data
      Tips.loading()
      let res = await this.GetBindinginfo()
      Tips.loaded()
      if (res.ret !== 1001) {
        Tips.toast(res.code)
        this.fixingsInfo = null
        this.$apply()
        return
      }
      let array = Array.from(res.data) // 转换数据
      array.forEach(item => {
        item.style = 0
      })
      // 数据赋值， 脏检测
      this.fixingsInfo = array
      this.$apply()
    }
    onLoad() {
      this.GetBindinginfoToWepySwipe()
    }
  }
</script>
