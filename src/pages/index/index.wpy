<style lang="scss">
.fixed-top{
  position: top;
  top: 0;
  left: 0;
  right: 0;
  background-color: rgba($color: #ffffff, $alpha: 1);
  display: flex;
 justify-content: space-around;
}
.fixed-bottom{
  @extend .fixed-bottom;
  bottom: 20rpx;
}
.fixed-right{
  position: fixed;
  top: 50%;
  transform: translateY(-50%);
  right: 20rpx;
}
.fixing__info{
  display: flex;
  flex-direction: row;
  .battery{
    width: 58rpx;
    height: 24rpx;
    overflow: visible;
  }
  .fixing{
    position: relative;
    left: -5rpx;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
}
.mode{
  width: 30rpx;
  height: 30rpx;
  vertical-align: middle;
}
</style>

<template>
  <view style="height:100%;">
    <map 
      id="myMap"
      style="width:100%; height:100%;"
      show-location
      scale="{{scale}}"
      latitude="{{locationInfo.latitude}}" 
      longitude="{{locationInfo.longitude}}" 
      controls="{{controls}}"
      markers="{{markers}}" >
      <cover-view class="controls fixed-top pl20 pt20 pb20 pr20"
        wx-if="{{locationInfo.MachineCode}}"
        >
        <cover-view class="weui-cell__bd column-around">
          <cover-view class="big bold" wx:if="{{locationInfo.address_reference.landmark_l1}}">{{locationInfo.address_reference.landmark_l1.title}}</cover-view>
          <cover-view class="big bold" wx:else>{{locationInfo.address_reference.landmark_l2.title}}</cover-view>
          <cover-view class="row mt20">
            <cover-view class="mr10">
              <cover-image class="mode" wx:if="{{locationInfo.Mode === 'LBS'}}" src="./assets/lbs-small.png"/>
              <cover-image class="mode" wx:if="{{locationInfo.Mode === 'GPS'}}" src="./assets/gps-small.png"/>
              <cover-image class="mode" wx:if="{{locationInfo.Mode === 'WIFI'}}" src="./assets/wifi-small.png"/>
            </cover-view>
            <cover-view class="weak mr10">精度{{locationInfo.Radius}}米</cover-view>
            <cover-view class="sm weak">{{locationInfo.address_component.district}}{{locationInfo.address_component.street_number}}</cover-view>
          </cover-view>
        </cover-view>
        <cover-view class="fixing__info">
          <cover-view class="mr10 column-around small">
            <cover-view class="weak row-center" wx:if="{{Battery}}">
              <cover-view class="mr10">
                <cover-image class="battery" wx:if="{{Battery > 0 && Battery <= 10 }}" src="./assets/battery/10.png"/>
                <cover-image class="battery" wx:if="{{Battery > 10 && Battery <= 20 }}" src="./assets/battery/20.png"/>
                <cover-image class="battery" wx:if="{{Battery > 20 && Battery <= 35 }}" src="./assets/battery/35.png"/>
                <cover-image class="battery" wx:if="{{Battery > 35 && Battery <= 50 }}" src="./assets/battery/50.png"/>
                <cover-image class="battery" wx:if="{{Battery > 50 && Battery <= 70 }}" src="./assets/battery/70.png"/>
                <cover-image class="battery" wx:if="{{Battery > 70 && Battery <= 90 }}" src="./assets/battery/90.png"/>
                <cover-image class="battery" wx:if="{{Battery > 90 && Battery <= 100 }}" src="./assets/battery/100.png"/>
              </cover-view>
              <cover-view class="xs">{{locationInfo.Battery}}%</cover-view>
            </cover-view>
            <cover-view class="creatTime primary mt20" wx:if="{{CreatTime}}">
              {{CreatTime}}
            </cover-view>
          </cover-view>
          <cover-view class="fixing column-around xs">
            <cover-image class="icon-lg" src="{{isDefaultFixingInfo.fixingIcon}}"/>
            <cover-view class="pl10 pr10">{{isDefaultFixingInfo.fixingName}}</cover-view>
          </cover-view>
        </cover-view>
      </cover-view>
      <cover-view class="controls row-around fixed-bottom">
        <cover-image 
          class="icon-small"  
          src="./assets/moveToLocation.png"
          @tap="moveToLocation"
        />
        <cover-image 
          class="icon-big" 
          src="./assets/getLastPosition.png"
          @tap="getLastPositionSmall"
        />
        <cover-image 
          class="icon-small" 
          src="./assets/my_fill_light.png"
          @tap="toGetMeInfo"
        />
      </cover-view>
      <cover-view class="controls column-center fixed-right">
        <cover-image 
          class="icon-small"  
          src="./assets/add.png"
          @tap="add"
        />
        <cover-image 
          class="icon-small" 
          src="./assets/reduce.png"
          @tap="reduce"
        />
      </cover-view>
    </map>
  </view>
</template>

<script>
  import Wepy from 'wepy'
  import Base from 'mixins/base'
  import Fixing from 'mixins/fixing'
  import Tips from 'utils/tips'
  export default class Index extends Wepy.page {
    mixins = [Base, Fixing]
    config = {
      navigationBarTitleText: '阿布跑跑'
    }
    data = {
      isFirst: true,
      scale: 16, // 默认 16
      markers: null,
      locationInfo: {
        latitude: '39.910119', // 当前地图经纬度点，默认定位到北京
        longitude: '116.397983'
      },
      userInfo: null
    }
    computed = {
      // 当前默认设备
      isDefaultFixingInfo() {
        if (this.fixingsInfo && this.fixingsInfo.length > 0) {
          for (let i = 0; i < this.fixingsInfo.length; i++) {
            if (Number.parseInt(this.fixingsInfo[i].isDefault) === 1) {
              return this.fixingsInfo[i]
            }
          }
        }
        return null
      },
      Battery() {
        if (this.locationInfo && this.locationInfo.Battery) {
          return Number.parseInt(this.locationInfo.Battery)
        }
        return null
      },
      CreatTime() {
        if (this.locationInfo && this.locationInfo.CreatTime) {
          let date = Number.parseInt(this.locationInfo.CreatTime + '000')
          let creatTime = this.ToTodayOrYesterday(date)
          return creatTime
        }
        return null
      }
    }
    methods = {
      // 将地图中心移动到当前定位点，需要配合map组件的show-location使用
      moveToLocation() {
        this.mapCtx.moveToLocation()
      },
      async getLastPositionSmall() {
        Tips.locationing()
        let markers = await this.GetLastPositionSmall(this.isDefaultFixingInfo)
        this.locationInfo = {...markers}
        this.markers = [{...markers}]
        this.$apply()
        Tips.locationed()
        this.mapCtx.translateMarker({
          markerId: 0,
          autoRotate: true,
          duration: 1000,
          rotate: 90,
          destination: {
            latitude: markers.latitude,
            longitude: markers.longitude
          }
        })
      },
      toGetMeInfo() {
        Wepy.navigateTo({
          url: '../user/GetMeInfo'
        })
      },
      add() {
        this.mapCtx.getCenterLocation({
          success: (res) => {
            this.locationInfo.latitude = res.latitude
            this.locationInfo.longitude = res.longitude
            this.$apply()
            if (this.scale === 18) return null
            this.scale = this.scale + 1
          }
        })
      },
      reduce() {
        this.mapCtx.getCenterLocation({
          success: (res) => {
            this.locationInfo.latitude = res.latitude
            this.locationInfo.longitude = res.longitude
            this.$apply()
            if (this.scale === 5) return null
            this.scale = this.scale - 1
          }
        })
      }
    }
    // 小程序获取定位 接口有延迟
    async GetLastPositionSmallToMap() {
    }
    // 首次进入界面获取历史定位数据
    async GetLastPositionToMap() {
    }
    async onLoad() {
      // 授权获取用户数据
      this.userInfo = this.$parent.GetUserInfo()
    }
    onReady() {
      // 定义myMap上下文
      this.mapCtx = Wepy.createMapContext('myMap')
    }
    async onShow() {
      // 用户是否登录 & 进入界面获取 API -> GetLastPosition
      if (this.userInfo) {
        Tips.locationing()
        // 获取最后历史定位
        let fixingsInfo = await this.GetBindinginfo()
        this.fixingsInfo = fixingsInfo.data
        this.$apply()
        // 获取默认设备最后定位经纬度
        let markers = await this.GetLastPosition(this.isDefaultFixingInfo)
        this.locationInfo = {...markers}
        this.markers = [{...markers}]
        this.$apply()
        Tips.locationed()
        this.mapCtx.translateMarker({
          markerId: 0,
          autoRotate: true,
          duration: 1000,
          rotate: 90,
          destination: {
            latitude: markers.latitude,
            longitude: markers.longitude
          }
        })
      }
    }
  }
</script>
